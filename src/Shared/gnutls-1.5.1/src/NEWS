GNU TLS NEWS -- History of user-visible changes.                -*- outline -*-
Copyright (C) 2004, 2005, 2006 Simon Josefsson
Copyright (C) 2000, 2001, 2002, 2003, 2004 Nikos Mavroyanopoulos
See the end for copying conditions.

* Version 1.5.1 (released 2006-09-21)

** Fix PKCS#1 verification to avoid a variant of Bleichenbacher's
** Crypto 06 rump session attack.
In particular, we check that the digestAlgorithm.parameters field is
missing or empty, to avoid that it can contain "garbage" that may be
used to alter the numeric properties of the signature.  See
<http://www.imc.org/ietf-openpgp/mail-archive/msg14307.html> (which is
not exactly the same as the problem we fix here).  Reported by Yutaka
OIWA <y.oiwa@aist.go.jp>.

See GNUTLS-SA-2006-4 on http://www.gnutls.org/security.html for more
up to date information.

** Add self test to test for above flaw.

** Fix gnutls-cli-debug regarding resume support detection.
Earlier, if the session-id from the server had a length of 0, it would
indicate the the server supports resumption, which isn't the case.
Reported by Kataja Kai <kai.kataja@op.fi>.

** Fix building of examples on FreeBSD by including netinet/in.h.
Reported by Roman Bogorodskiy <novel@FreeBSD.org>.

** Fix certtool bug that caused the private key to not be loaded when
generating a certificate with --load-request, which in turn triggered
another unrelated bug in gnutls_x509_crt_sign2 (also fixed).  Reported
by Sascha Ziemann <sascha.ziemann@secunet.com>.

** gnutls-cli and gnutls-serv works on Windows.
The problem was the select() call that doesn't work on file
descriptors (stdin) on Windows.  We borrowed some code from plibc to
solve this.  It appears to be somewhat unreliable though.

** Autoconf 2.60 is now used.

** API and ABI modifications:
No changes since last version.

* Version 1.5.0 (released 2006-08-13)

** Change SRP and Cert-Type extensions to match IANA registry.

** Fixed bug in OpenPGP authentication handshake.

** Improvements for building under MinGW.
Provides internal inet_ntop and inet_pton functions and arpa/inet.h
header.  Calls WSAStartup and WSACleanup in gnutls_global_init and
gnutls_global_deinit, respectively.  Loads getaddrinfo and getnameinfo
at run-time from ws2_32.dll, and falls back on a simple replacement if
it is not available.  Builds the library with -mms-bitfields
-Wl,--enable-runtime-pseudo-reloc.  Links with --output-def, to
create *.def files, which are installed.

** The examples now (conditionally) include config.h and link to gnulib.
No other source changes were necessary, so the examples should
continue to be possible to use stand-alone without any autoconf or
gnulib stuff.

** Added C++ header "gnutlsxx.h" and library "libgnutlsxx".
You may unconditionally disable it with --disable-cxx.  See
includes/gnutls/gnutlsxx.h and lib/gnutlsxx.cpp for the
implementation.

** Made command line tool '--version' behave according to GNU Standards.
This enables 'make distcheck' to succeed.

** OpenCDK updated to 0.5.9 to fix some problems with OpenPGP support.

** Make --without-included-libtasn1 work.
Reported by Daniel Black <dragonheart@gentoo.org>.

** Fix a crash (strcmp() on a NULL value) in the certificate verification logic.
See http://www.gnu.org/software/gnutls/security.html regardging
GNUTLS-SA-2006-2 for more up to date information.  Reported by
satyakumar <satyam_kkd@hyd.hellosoft.com>.

** API and ABI modifications:
No changes since last version.

* Version 1.4.0 (released 2006-05-15)

** Remove GnuTLS 0.8.x compatibility functions.

** The libgcrypt RNG is initialized in gnutls_global_init().

** TLS/IA API changes from Emile van Bergen.
A dummy credential structure is not needed now, if you wish to use the
low-level TLS/IA API, simply call gnutls_ia_enable to enable TLS/IA on
a session.

** The self-tests are now run under valgrind, if it is installed.

** Libtasn1 is updated to 0.3.4, and that version is now required.

** The command line tools now use getaddrinfo and support IPv6.

** API and ABI modifications:
_gnutls_x509_get_raw_crt_activation_time,
_gnutls_x509_get_raw_crt_expiration_time: Removed.
gnutls_ia_require_inner_phase: Removed, replaced by gnutls_ia_enable.
gnutls_ia_enable: Added.

* Version 1.3.5 (released 2006-03-08)

** Error messages are now translated using GNU Gettext.

** The function gnutls_x509_crt_to_xml now return an internal error.
This means that the code to convert X.509 certificates to XML format
does not work any more.  The reason is that the function called
libtasn1 internal functions.  It seems unclean for libtasn1 to export
the APIs needed here.  Instead it would be better to implement XML
support inside libtasn1 properly.  If you need this functionality
strongly, please consider looking into implementing this suggested
approach instead.  As a workaround, you may also modify lib/x509/xml.c
(change '#if 1' to '#if 0') and build using --with-included-libtasn1.

** Libraries are now built with libtool's -no-undefined.
This helps producing libraries for Windows using mingw32.

** Doc fixes to explain that gnutls_record_send can block.

** Libtasn1 0.3.1 or later is now required.
The include copy has been updated too.

** gnutls-cli can now recognize services and port numbers with the -p option.

** API and ABI modifications:
No changes since last version.

* Version 1.3.4 (released 2006-02-09)

** Fix read of out bounds bug in DER parser.
Reported by Evgeny Legerov <admin@gleg.net>, and debugging help from
Protover SSL.  Libtasn1 0.2.18 is now required, which contains the
previous bug fix.  The included libtasn1 version in GnuTLS has been
updated.

** Fixed bug in non-blocking gnutls_bye(). gnutls_record_send() will no 
longer invalidate a session if the underlying send fails, but it will 
prevent future writes. That is to allow reading the already received data.
Patches and bug reports by Yoann Vandoorselaere <yoann@prelude-ids.org>

** Corrected bugs in gnutls_certificate_set_x509_crl() and
gnutls_certificate_set_x509_trust(), that caused memory corruption if 
more than one certificates were added. Report and patch by Max Kellermann.

** Fix build problems of OpenCDK on AIX.
Thanks to "Heiden, John" <JHeiden@UTNet.UToledo.Edu>.

** API and ABI modifications:
No changes since last version.

* Version 1.3.3 (released 2006-01-12)

** New API to access the TLS master secret.
When possible, you should use the TLS PRF functions instead.
Suggested by Jouni Malinen <jkmaline@cc.hut.fi>.

** Improved handling when multiple libraries use GnuTLS at the same time.
Now gnutls_global_init() can be called multiple times, and
gnutls_global_deinit() will only deallocate the structure when it has
been called as many times as gnutls_global_init() was called.

** Added a self test of TLS resume functionality.

** Fix crash in TLS resume code, caused by TLS/IA changes.

** Documentation fixes about thread unsafety, prompted by
** discussion with bryanh@giraffe-data.com (Bryan Henderson).
In particular, gnutls_global_init() and gnutls_global_deinit() are not
thread safe.  Careful callers may want to protect the call using a
mutex.  The problem could also be ignored, which would cause a memory
leak under rare conditions when two threads invoke the function
roughly at the same time.

** Add 'const' keywords in various places, from Frediano ZIGLIO.

** The code was indented again, including the external header files.

** API and ABI modifications:
New functions to retrieve the master secret value:
  gnutls_session_get_master_secret

Add a 'const' keyword to existing API:
  gnutls_x509_crq_get_challenge_password

* Version 1.3.2 (released 2005-12-15)

** GnuTLS now support TLS Inner application (TLS/IA).
This is per draft-funk-tls-inner-application-extension-01.  This
functionality is added to libgnutls-extra, so it is licensed under the
GNU General Public License.

** New APIs to access the TLS Pseudo-Random-Function (PRF).
The PRF is used by some protocols building on TLS, such as EAP-PEAP
and EAP-TTLS.  One function to access the raw PRF and one to access
the PRF seeded with the client/server random fields are provided.
Suggested by Jouni Malinen <jkmaline@cc.hut.fi>.

** New APIs to acceess the client and server random fields in a session.
These fields can be useful by protocols using TLS.  Note that these
fields are typically used as input to the TLS PRF, and if this is your
intended use, you should use the TLS PRF API that use the
client/server random field directly.  Suggested by Jouni Malinen
<jkmaline@cc.hut.fi>.

** Internal type cleanups.
The uint8, uint16, uint32 types have been replaced by uint8_t,
uint16_t, uint32_t.  Gnulib is used to guarantee the presence of
correct types on platforms that lack them.  The uint type have been
replaced by unsigned.

** API and ABI modifications:
New functions to invoke the TLS Pseudo-Random-Function (PRF):
  gnutls_prf
  gnutls_prf_raw

New functions to retrieve the session's client and server random values:
  gnutls_session_get_server_random
  gnutls_session_get_client_random

New function, to perform TLS/IA handshake:
  gnutls_ia_handshake

New function to decide whether to do a TLS/IA handshake:
  gnutls_ia_handshake_p

New functions to allocate a TLS/IA credential:
  gnutls_ia_allocate_client_credentials
  gnutls_ia_free_client_credentials
  gnutls_ia_allocate_server_credentials
  gnutls_ia_free_server_credentials

New functions to handle the AVP callback:
  gnutls_ia_set_client_avp_function
  gnutls_ia_set_client_avp_ptr
  gnutls_ia_get_client_avp_ptr
  gnutls_ia_set_server_avp_function
  gnutls_ia_set_server_avp_ptr
  gnutls_ia_get_server_avp_ptr

New functions, to toggle TLS/IA application phases:
  gnutls_ia_require_inner_phase

New function to mix session keys with inner secret:
  gnutls_ia_permute_inner_secret

Low-level API (used internally by gnutls_ia_handshake):
  gnutls_ia_endphase_send
  gnutls_ia_send
  gnutls_ia_recv

New functions that can be used after successful TLS/IA negotiation:
  gnutls_ia_generate_challenge
  gnutls_ia_extract_inner_secret

Enum type with TLS/IA modes:
  gnutls_ia_mode_t

Enum type with TLS/IA packet types:
  gnutls_ia_apptype_t

Enum values for TLS/IA alerts:
  GNUTLS_A_INNER_APPLICATION_FAILURE
  GNUTLS_A_INNER_APPLICATION_VERIFICATION

New error codes, to signal when an application phase has finished:
  GNUTLS_E_WARNING_IA_IPHF_RECEIVED
  GNUTLS_E_WARNING_IA_FPHF_RECEIVED

New error code to signal TLS/IA verify failure:
  GNUTLS_E_IA_VERIFY_FAILED

* Version 1.3.1 (released 2005-12-08)

** Support for DHE-PSK cipher suites has been added.
This method offers perfect forward secrecy.

** Fix gnutls-cli STARTTLS hang when SIGINT is sent too quickly, thanks to
Otto Maddox <ottomaddox@fastmail.fm> and Nozomu Ando <nand@mac.com>.

** Corrected a bug in certtool for 64 bit machines. Reported
by Max Kellermann <max@duempel.org>.

** New function to set a X.509 private key and certificate pairs, and/or
CRLs, from an PKCS#12 file, suggested by Emile van Bergen
<emile@e-advies.nl>.

The integrity of the PKCS#12 file is protected through a password
based MAC; public-key based signatures for integrity protection are
not supported.  PKCS#12 bags may be encrypted using password derived
symmetric keys, public-key based encryption is not supported.  The
PKCS#8 keys may be encrypted using passwords.  The API use the same
password for all operations.  We believe that any more flexibility
create too much complexity that would hurt overall security, but may
add more PKCS#12 related APIs if real-world experience indicate
otherwise.

** gnutls_x509_privkey_import_pkcs8 now accept unencrypted PEM PKCS#8 keys,
reported by Emile van Bergen <emile@e-advies.nl>.
This will enable "certtool -k -8" to parse those keys.

** Certtool now generate keys in unencrypted PKCS#8 format for empty passwords.
Use "certtool -p -8" and press press enter at the prompt.  Earlier,
certtool would have encrypted the key using an empty password.

** Certtool now accept --password for --key-info and encrypted PKCS#8 keys.
Earlier it would have prompted the user for it, even if --password was
supplied.

** Added self test of PKCS#8 parsing.
Unencrypted and encrypted (pbeWithSHAAnd3-KeyTripleDES-CBC and
pbeWithSHAAnd40BitRC2-CBC) formats are tested.  The test is in
tests/pkcs8.

** API and ABI modifications:
New function to set X.509 credentials from a PKCS#12 file:
  gnutls_certificate_set_x509_simple_pkcs12_file

New gnutls_kx_algorithm_t enum type:
  GNUTLS_KX_DHE_PSK

New API to return session data (basically same as gnutls_session_get_data):
  gnutls_session_get_data2

New API to set PSK Diffie-Hellman parameters:
  gnutls_psk_set_server_dh_params

* Version 1.3.0 (2005-11-15)

** Support for TLS Pre-Shared Key (TLS-PSK) ciphersuites have been added.
This add several new APIs, see below.  Read the updated manual for
more information.  A new self test "pskself" has been added, that will
test this functionality.

** The session resumption data are now system independent.

** The code has been re-indented to conform to the GNU coding style.

** Removed the RIPEMD ciphersuites.

** Added a discussion of the internals of gnutls in manual.

** Fixes for Tru64 UNIX 4.0D that lack MAP_FAILED, from Albert Chin.

** Remove trailing comma in enums, for IBM C v6, from Albert Chin.

** Make sure config.h is included first in a few files, from Albert Chin.

** Don't use C++ comments ("//") as they are invalid, from Albert Chin.

** Don't install SRP programs and man pages if --disable-srp-authentication,
from Albert Chin.

** API and ABI modifications:
New gnutls_kx_algorithm_t key exchange type: GNUTLS_KX_PSK

New gnutls_credentials_type_t credential type:
  GNUTLS_CRD_PSK

New credential types:
  gnutls_psk_server_credentials_t
  gnutls_psk_client_credentials_t

New functions to allocate PSK credentials:
  gnutls_psk_allocate_client_credentials
  gnutls_psk_free_client_credentials
  gnutls_psk_free_server_credentials
  gnutls_psk_allocate_server_credentials

New enum type for PSK key flags:
  gnutls_psk_key_flags

New function prototypes for credential callback:
  gnutls_psk_client_credentials_function
  gnutls_psk_server_credentials_function

New function to set PSK username and key:
  gnutls_psk_set_client_credentials

New function to set PSK passwd file:
  gnutls_psk_set_server_credentials_file

New function to extract PSK user in server:
  gnutls_psk_server_get_username

New functions to set PSK callback:
  gnutls_psk_set_server_credentials_function
  gnutls_psk_set_client_credentials_function

Use size_t instead of int for output size parameter:
  gnutls_srp_base64_encode
  gnutls_srp_base64_decode

* Version 1.2.9 (2005-11-07)
- Documentation was updated and improved.
- RSA-MD2 is now supported for verifying digital signatures.
- Due to cryptographic advances, verifying untrusted X.509
  certificates signed with RSA-MD2 or RSA-MD5 will now fail with a
  GNUTLS_CERT_INSECURE_ALGORITHM verification output.  For
  applications that must remain interoperable, you can use the
  GNUTLS_VERIFY_ALLOW_SIGN_RSA_MD2 or GNUTLS_VERIFY_ALLOW_SIGN_RSA_MD5
  flags when verifying certificates.  Naturally, this is not
  recommended default behaviour for applications.  To enable the
  broken algorithms, call gnutls_certificate_set_verify_flags with the
  proper flag, to change the verification mode used by
  gnutls_certificate_verify_peers2.
- Make it possible to send empty data through gnutls_record_send,
  to align with the send(2) API.
- Some changes in the certificate receiving part of handshake to prevent
  some possible errors with non-blocking servers.
- Added numeric version symbols to permit simple CPP-based feature
  tests, suggested by Daniel Stenberg <daniel@haxx.se>.
- The (experimental) low-level crypto alternative to libgcrypt used
  earlier (Nettle) has been replaced with crypto code from gnulib.
  This leads to easier re-use of these components in other projects,
  leading to more review and simpler maintenance.  The new configure
  parameter --with-builtin-crypto replace the old --with-nettle, and
  must be used if you wish to enable this functionality.  See README
  under "Experimental" for more information.  Internally, GnuTLS has
  been updated to use the new "Generic Crypto" API in gl/gc.h.  The
  API is similar to the old crypto/gc.h, because the gnulib code were
  based on GnuTLS's gc.h.
- Fix compiler warning in the "anonself" self test.
- API and ABI modifications:
gnutls_x509_crt_list_verify: Added 'const' to prototype in <gnutls/x509.h>.
                             This doesn't reflect a change in behaviour,
                             so we don't break backwards compatibility.
GNUTLS_MAC_MD2: New gnutls_mac_algorithm_t value.
GNUTLS_DIG_MD2: New gnutls_digest_algorithm_t value.
GNUTLS_VERIFY_ALLOW_SIGN_RSA_MD2,
GNUTLS_VERIFY_ALLOW_SIGN_RSA_MD5: New gnutls_certificate_verify_flags values.
                                  Use when calling
                                  gnutls_x509_crt_list_verify,
                                  gnutls_x509_crt_verify, or
                                  gnutls_certificate_set_verify_flags.
GNUTLS_CERT_INSECURE_ALGORITHM: New gnutls_certificate_status_t value,
                                used when broken signature algorithms
                                is used (currently RSA-MD2/MD5).
LIBGNUTLS_VERSION_MAJOR,
LIBGNUTLS_VERSION_MINOR,
LIBGNUTLS_VERSION_PATCH,
LIBGNUTLS_VERSION_NUMBER: New CPP symbols, indicating the GnuTLS
			  version number, can be used for feature existence
			  tests.

* Version 1.2.8 (2005-10-07)
- Libgcrypt 1.2.2 is required to fix a bug for forking GnuTLS servers.
- Don't install the auxilliary libexamples library used by the
  examples in doc/examples/ on "make install", report and tiny patch
  from Thomas Klausner <tk@giga.or.at>.
- If you pass a X.509 CA or PGP trust database to the command line
  tool, it will now abort the connection if the server certificate
  validation fails.  Use the parameter --insecure to continue even
  after certificate validation failures.  Inspired from discussion
  with Alexander Kotelnikov <sacha@myxomop.com>.
- The test for socklen_t has been moved to gnulib.
- Link failures for duplicate or missing "program_name" symbol has been fixed,
  patch from Martin Lambers <marlam@marlam.de>.
- The command line tool and the examples no longer uses mmap or bzero,
  to make them more portable, patch from Martin Lambers
  <marlam@marlam.de>.
- Made the PKCS #12 API handle null passwords. Based on patch by
  Anton Altaparmakov <aia21@cam.ac.uk>.
- The GTK-DOC manual should build with current released tools.
  (But a copy of the output is included, so the tools are not required.)
- The inet_ntop function is now used through gnulib.
- API and ABI modifications:
  No changes since last version.

* Version 1.2.7 (2005-09-09)
- The GNUTLS and GNUTLS-EXTRA libraries are now built with versioned symbols.
- Certtool now complains when reading out-of-range X.509 serial
  numbers, suggested by Fran <e_agf@yahoo.es>.
- Certtool now uses the readline library (when available) when reading
  X.509 serial numbers.
- Fixed build problems in getpass on uClibc and Mingw32 platforms.
- Fixed compile warning regarding socklen_t on Mingw32, reported by
  Martin Lambers <marlam@marlam.de>.
- Fixed examples in doc/examples/, suggested by Fran <e_agf@yahoo.es>.
- Gnulib is now used for the core library, enabling future code cleanups.
- The gnutls-cli tool now use gnutls_certificate_verify_peers2,
  suggested by Daniel Stenberg <daniel@haxx.se>.
- Doc fixes for gnutls_transport_set_push and gnutls_transport_set_pull.
- Minilibtasn1 is now 0.2.17 (removed optional use of C99 macros).
- Disable zlib support if zlib.h is not present.
- A number of internal cleanups.
- API and ABI modifications:
  No changes since last version.

* Version 1.2.6 (2005-07-16)
- MiniLZO updated to version 2.01 and moved to separate directory.
- Collision between system LZO header files and MiniLZO header file
  fixed, reported by Matthias Urlichs <smurf@smurf.noris.de>.
- Will now test for liblzo functionality in liblzo2 too, reported by
  Thomas Klausner <tk@giga.or.at>.
- Minilibtasn1 is now 0.2.14 (no code changes).
- Some code changes to avoid GTK-DOC warnings.
- API and ABI modifications:
  No changes since last version.

* Version 1.2.5 (2005-07-03)
- More builddir != srcdir fixes, reported by Mike Castle
  <dalgoda@ix.netcom.com>.
- Fixed off-by-one bug in the size parameter of gnutls_x509_crt_get*_dn,
  reported by Adam Langley <alangley@gmail.com>.
- Corrected some stuff in minilzo detection. Pointed out by 
  Sergey Lipnevich.
- MiniLZO updated to version 2.00.
- gnutls_x509_crt_list_import now accept a DER formatted CRL.
- API and ABI modifications:
  No changes since last version.

* Version 1.2.4 (2005-05-28)
- Corrected some bugs that could affect 64 bit systems.
- Some corrections in the header files to include the prototype
  of memmem properly (affected 64 bit systems). Report and patch
  by Yoann Vandoorselaere <yoann@prelude-ids.org>.
- Introduced the --fix-key option to certtool, which can be used to
  regenerate the (optional) parameters in a private key. It should
  be used together with --key-info.
- Corrected a bug in certificate chain verification that could lead
  to marking a trusted chain as non trusted, if the last certificate in
  the chain was a self signed one.
- Gnulib portability files were updated.
- License were updated to reflect new FSF address.
- API and ABI modifications:
  No changes since last version.

* Version 1.2.3 (2005-04-28)
- Corrected bug in record packet parsing that could lead
  to a denial of service attack.
- Corrected bug in RSA key export. Previously exported keys
  can be fixed using certtool. Use certtool -k <infile >outfile
- API and ABI modifications:
    gnutls_x509_privkey_fix(): Add.

* Version 1.2.2 (2005-04-25)
- gnutls_error_to_alert() now considers
  GNUTLS_E_UNEXPECTED_HANDSHAKE_PACKET.
- Fixed error in session resuming that could cause a crash in a session.
- Fixed pkcs12 friendly name and local key identifier decoding.
- Internal cleanups, removed duplicate typedef/struct definitions,
  and made source code include external include file, to check
  function prototypes during compile time.
- API and ABI modifications:
  No changes since last version.  At least not intentional, but due
  to the include header changes, there may be inadvertant changes,
  please let us know if you find any.

* Version 1.2.1 (2005-04-04)
- gnutls_bye() will no longer fail when RDWR is used and application
  data are available for reading.
- Added more strict checks for the SRP parameters (g,n), when they
  are not in the included list.
- Added warning to certtool when MD5 is being used for digital
  signatures.
- Optimizations ("-O2 -finline-functions") are not enabled by default,
  instead the standard autoconf defaults are used.  Use `./configure
  CFLAGS="-O2 -finline-functions"' to get the old optimizations.
- Added the option --get-dh-params to certtool, in order to get the
  parameters included in the library primes and generators.
- Improved the semantics of GNUTLS_VERIFY_ALLOW_X509_V1_CA_CRT, to
  allow only trusted Version 1 CAs and introduced
  GNUTLS_VERIFY_ALLOW_ANY_X509_V1_CA_CRT which has the old semantics.
- Nettle self tests now build properly, reported by Pierre
  <pierre42d@9online.fr>.
- Eliminated some memory leaks in DHE and RSA-EXPORT cipher suites.
  Reported by Yoann Vandoorselaere <yoann@prelude-ids.org>.
- If the library has been compiled with features disabled, a warning is 
  issued during the compilation of any program.
- API and ABI modifications:
    gnutls_x509_crt_list_import(): Add
    gnutls_x509_crq_get_attribute_by_oid(): Add.
    gnutls_x509_crq_set_attribute_by_oid(): Add
    gnutls_x509_crt_set_extension_by_oid(): Add.
    GNUTLS_VERIFY_ALLOW_X509_V1_CA_CRT: Modify semantics.
    GNUTLS_VERIFY_ALLOW_ANY_X509_V1_CA_CRT: Add, old behaviour.

* Version 1.2.0 (2005-01-27)
- Added the definitions and OIDs for the RIPEMD-160 hash algorithm.
- Introduced gnutls_x509_crt_sign2(), gnutls_x509_crq_sign2() and 
  gnutls_x509_crl_sign2().
- Fixed license header in source code files.

* Version 1.1.23 (2005-01-18)
- It is now possible to generate PKCS#12 structures without private
  keys using "certtool --to-p12", suggested by Fabian Fagerholm
  <fabbe@paniq.net>.
- Certtool now prints information for the RSA and DSA parameters of
  certificates and private keys.
- Corrected the write of CRL distribution points.
- The certificate chain verification function now checks certificates
  in the reverse order to minimize the spent resources.
- Corrected several bugs found by Marcin Garski <mgarski@post.pl>
- The functions gnutls_x509_crl_get_issuer_dn, gnutls_x509_crq_get_dn,
  gnutls_x509_crt_get_issuer_dn, gnutls_x509_crt_get_dn, and
  gnutls_x509_rdn_get now set *sizeof_buf to the buffer length that is
  required, instead of the string length.  That is, the value has been
  incremented by 1 to account for the terminating zero. Reported by
  Martin Lambers <marlam@web.de>.
- Debug output shouldn't crash on platforms that doesn't handle NULL
  printf %s values.  Reported by Michael.Ringe@aachen.utimaco.de.
- Sync included copy of libtasn1 with version 0.2.13.
- Client X.509 authenticated connections via gnutls-cli should now work again.

* Version 1.1.22 (2004-11-04)
- Replace GNU LD version script with Libtool -export-symbols-regex,
  from Joe Orton <joe@manyfish.co.uk>.
- Documentation improvements.
- Code indented using 'indent -i4 -kr'.
- The API manual is included in Devhelp format.  (Was in last release too,
  but the NEWS entry was forgotten.)
- The OpenSSL compatibility code now use the internal crypto interface.
- Added simple self test of OpenSSL compatibility library.
- Internally, libtool convenience libraries are used.
- Cleanups to configure.ac.

* Version 1.1.21 (2004-10-27)
- Print DN of certificates with unknown characters in them, but in hexform
  only.
- Added second precision to the X.509 parsing and generation functions.
- Corrected bug in _gnutls_x509_get_dn_oid(), and returns the
  actual OID.
- Add parameter --la-file to libgnutls-config and libgnutls-extra-config,
  tiny patch contributed by Joe Orton <joe@manyfish.co.uk>.
- Add pkg-config meta files, suggested by Stéphane LOEUILLET
  <stephane.loeuillet@tiscali.fr>.
- Fix memory initializaion bug in gnutls_certificate_set_x509_trust,
  tiny patch by Aleix Conchillo Flaque <aleix@member.fsf.org>.
- Add self test of PKCS#12 functionality in "certtool", based on test
  vectors from Joe Orton <joe@manyfish.co.uk>.
- Fix library order in libgnutls*-config --libs output, to permit
  static linking, reported by Yoann Vandoorselaere
  <yoann@prelude-ids.org>.

* Version 1.1.20 (2004-10-12)
- Fix compile problem in gl/getpass.c on some systems.

* Version 1.1.19 (2004-10-07)
- Fix memory leak in gnutls_certificate_verify_peers and
  gnutls_certificate_free_credentials, report and patch by Simon
  Posnjak <simon.posnjak@cetrtapot.si>.
- Fix crash in `certtool --to-p12 --load-privkey foo', i.e. exporting
  a key and no certificate to PKCS#12.
- Fix objdir != srcdir builds, reported by "Gerrit P. Haase"
  <gp@familiehaase.de>.
- Fixes faulty getpass implementation in libextra/opencdk/, reported
  by Yoann Vandoorselaere <yoann@prelude-ids.org>.
- Uses memmem instead of strnstr in lib/.
- Using more GNULib portability files, although not yet inside lib/.
- Added gnutls_certificate_verify_peers to gnutls/compat.h.
  Nikos deprecated gnutls_certificate_verify_peers in favor of
  gnutls_certificate_verify_peers2 earlier in the 1.1 branch.
- Improvements to the manual.
- Add new example "ex-rfc2818" for certificate verification, from Nikos.
- Known bug: the library require snprintf.  This has not yet been
  fixed, but will be handled via GNULib later on.

* Version 1.1.18 (2004-08-24)
- Corrected handling of certificate with dates after year 2038.
- Corrected DER decoder which could incorrectly treat input as BER and fail.
- Correct certtool --smime-to-p7 end of line character handling.
- Added example client and server for anonymous authentication.
- Added self test that tests anonymous TLS client and server.
- Added self tests of Nettle and generic crypto layer.
- Added API reference manual in HTML format in doc/reference/ using GTK-DOC.
  Online version at <http://www.gnu.org/software/gnutls/reference/>.
- Assume C89 or better; removed checks for size_t, ptrdiff_t and time_t.
- Man pages for API functions are included.

* Version 1.1.17 (2004-08-18)
- Bug fix of padding string in RSA PKCS#1 v1.5 type 2 encryption,
  reported by Robey Pointer <robey@danger.com>.
- Generic crypto interface for secret key ciphers, hashes and randomness added.
  See section "Experimental" within section "COMPILATION ISSUES" in README.
- Removed length limit on passwords read by 'certtool'.
- Documentation fixes.

* Version 1.1.16 (2004-08-15)
- Fix missing gnulib linker parameter when building certtool.
- Add gnulib module 'progname', needed by module 'error'.
- Improve building with srcdir != objdir.

* Version 1.1.15 (2004-08-15)
- Certtool has simplistic --smime-to-p7 to translate RFC 2633 messages into
  PKCS #7 format.
- Ported to Mac OS X / Darwin.
- Ported to FreeBSD.

* Version 1.1.14 (2004-08-09)
- Documentation converted to Texinfo format.
- Bug fix of test suite.
- Configure now print build information, used by Autobuild.

* Version 1.1.13 (2004-08-05)
- Added simple self test suite.

* Version 1.1.12 (2004-08-02)
- Updated the SRP authentication to conform to the
  latest (yet unreleased) draft. Unfortunately this breaks
  compatibility with previous versions.
- Changed the makefiles to be more portable.
- SRP ciphersuites were moved to the gnutls library.
- Added some default limits in the verification of certificate
  chains, to avoid denial of service attacks. Also added 
  gnutls_certificate_set_verify_limits() to override them.
  Issue pointed out by Patrik Hornik <patrik@hornik.sk>.
- Added gnutls_certificate_verify_peers2().

* Version 1.1.11 (2004-07-16)
- Added the '_t' suffix to all exported symbols.
- Fixed bug in RSA encryption, report and patch by Martijn Koster 
  <mak@greenhills.co.uk>.
- Corrected a bug in certificate verification. Pointed out by
  Yoann Vandoorselaere <yoann@prelude-ids.org>
- Added the GNUTLS_VERIFY_DO_NOT_ALLOW_SAME flags to the
  verification functions.
- The ephemeral DH and RSA parameters are no longer stored in the
  session resume DB.
- Do not free the SRP (prime and generator) parameters obtained from the 
  callback if they are the static ones defined in extra.h
- Eliminated some memory leaks. Reported by Yoann Vandoorselaere.

* Version 1.1.10 (2004-06-12)
- Added gnutls_sign_algorithm_get_name() and gnutls_pk_algorithm_get_name()
- Corrected bug in TLS renegotiation.
- Corrected bug in OpenPGP key loading using a callback.
- gnutls-srpcrypt was renamed to srptool
- Allow handshake requests by the client.
- Automatically disable certificate types that do not have corresponding
  certificates.
- Added gnutls_auth_client_get_type() and gnutls_auth_server_get_type()
- Opencdk library is being included if not found.
- certtool can now add ip address SAN extension.
- certtool has now support for more X.520 DN attribute types.
- Better handling of EOF in gnutls_record_recv().
- _gnutls_deinit() is no longer used. Sessions are not
  automatically removed any more, on abnormal termination.
- Corrected session resuming in SRP ciphersuites.
- Updated to conform to the latest srp draft (draft-ietf-tls-srp-07)
- Added new functions to allow access to the ephemeral
  Diffie Hellman parameters.
- Added the functions gnutls_x509_crt_get_pk_rsa_raw() and
  gnutls_x509_crt_get_pk_dsa_raw() to retrieve parameters from certificates.
- Added the functions gnutls_dh_get_group(), gnutls_dh_get_pubkey() and
  gnutls_rsa_export_get_pubkey() to retrieve parameters of the DH or
  RSA-EXPORT key exchange.
- Some fixes in the session resuming code.
- Added gnutls_openpgp_keyring_check_id().

* Version 1.1.9 (2004-04-14)
- Added support for authority key identifier and the extended key usage
  X.509 extension fields. The certtoool was updated to support them.
- The RC2 cipher is no more included. The one in libgcrypt is now used.
- Added batch support to certtool. Now it can use templates.

* Version 1.1.8 (2004-04-07)
- Implemented all the tests for the SRP group parameters in
  client side. This may lead to incompatibility with very
  old gnutls servers.
- Corrected bug in RSA parameters handling which could cause
  unexpected crashes.
- Optimized the copying of rsa_params.

* Version 1.1.7 (2004-03-29)
- Added gnutls_certificate_set_params_function() and 
  gnutls_anon_set_params_function() that set the RSA or DH
  parameters using a callback.
- Added functions gnutls_rsa_params_cpy(), gnutls_dh_params_cpy()
  and gnutls_x509_privkey_cpy().
- Corrected a compilation issue when opencdk was installed in a
  non standard directory.
- Deprecated: gnutls_srp_server_set_select_function(), 
  gnutls_certificate_client_set_select_function(), gnutls_srp_server_set_select_function().

* Version 1.1.6 (2004-02-24)
- Several bug fixes, by Arne Thomassen.
- Fixed a bug where 'server name' extension was always sent.

* Version 1.1.5 (2004-01-06)
- Added the gnutls_sign_algorithm type.

* Version 1.1.4 (2004-01-04)
- Improved gnutls-cli's SRP behaviour in SRP ciphersuites.
  If they are of highest priority then the abbreviated handshake
  is used.
- Removed all references of missing files.
- Changed handshake behaviour to send the lowest TLS version
  when an unsupported version was advertized. The current behaviour
  is to send the maximum version we support.
- Corrected problem printing the DC attributes in a DN.

* Version 1.1.3 (2003-12-30)
- Implemented TLS 1.1 (and also obsoleted the TLS 1.0 CBC protection
  hack).

* Version 1.1.2 (2003-12-28)
- Added CRL verification functionality to certtool.
- Corrected the CRL distribution point extension handling.

* Version 1.1.1 (2003-12-26)
- Added PKCS #7 support to certtool utility.
- Added support for reading and generating CRL distribution
  points extensions in certificates.
- Added support for generating CRLs in the library and the
  certtool utility.
- Added support for the Subject Key ID PKIX extension.

* Version 1.1.0 (2003-12-21)
- The error codes GNUTLS_E_NO_TEMPORARY_DH_PARAMS and GNUTLS_E_NO_TEMPORARY_RSA_PARAMS
  are no longer returned by the handshake function. Ciphersuites that
  require temporary parameters are removed when such parameters do not exist.
- Added the callbacks gnutls_certificate_client_retrieve_function() and
  gnutls_certificate_server_retrieve_function(), to allow a client or a server
  to specify certificates for the handshake without storing them to the
  credentials structure.
- Added support for generating and exporting DSA private keys.
- Added gnutls_x509_crt_set_key_usage() and certtool can now set the
  certificate's key usage.
- Added gnutls_openpgp_key_get_key_usage().

* Version 1.0.1 (2003-12-10)
- Some minor fixes in the makefiles. They now include CFLAGS
  from libgcrypt or opencdk if installed in a non standard directory.
- Fixed the SRP detection test in gnutls-cli-debug.
- Added gnutls_rsa_params_export_pkcs1() and gnutls_rsa_params_import_pkcs1().

* Version 1.0.0 (2003-12-04)
- Exported the static SRP group parameters.
- Some fixes in the certificate authenticated SRP ciphersuites.
- Improved the support for draft-ietf-tls-srp-05. The two-phase
  handshake is now fully supported without any interaction with
  the application layer (except for a callback).

* Version 0.9.99 (2003-11-28)
- Some fixes in the gnutls.h header for the gnutls_server_name_set()
  and gnutls_server_name_get() prototypes.
- Exported the gnutls_x509_privkey_sign_data(), gnutls_x509_privkey_verify_data() 
  and gnutls_x509_crt_verify_data().
- Some fixes in the openpgp authentication.
- Removed the Twofish cipher.

* Version 0.9.98 (2003-11-16)
- The openssl compatibility layer was moved to gnutls-openssl
  library instead of being included in the gnutls-extra library.
- Added the RIPEMD ciphersuites defined in draft-ietf-tls-openpgp-keys-04.
- Building with openpgp support is now mandatory.
- gnutls4 compatibility header is no longer included by default in
  gnutls.h.
- gnutls8 function usage yelds a deprecation warning in gcc3.
- gnutls_x509_*_set_dn_by_oid() and gnutls_x509_*_get_*_dn_by_oid()
  functions have a raw_flag parameter added.
- Added gnutls_x509_*_get_dn_oid() and gnutls_x509_crt_get_extension_oid()
  functions which return the available OIDs.

* Version 0.9.97 (2003-11-11)
- The certtool utility can now generate PKCS #12 structures
  without specifying a certificate.
- Added capability to read CRLs to certtool.
- Corrected some functions which return GNUTLS_E_SHORT_MEMORY_BUFFER
  to properly set the required buffer size.
- Corrected a bug in libgcrypt detection.

* Version 0.9.96 (2003-11-09)
- Some changes to allow compilation with mingw32.
- Several code cleanups.

* Version 0.9.95 (2003-11-02)
- Improved the verification functions. Added new verification
  output flags and removed the unused and redundant ones.
- Improved the OpenPGP key support.
- The prime utility was removed, and its functionality was moved
  to certtool.

* Version 0.9.94 (2003-10-30)
- Added manpages for the included programs.
- Documented and improved the certtool utility. 
- Added PKCS #12 support to certtool utility.

* Version 0.9.93 (2003-10-26)
- Corrected some compilation issues.
- Improved the certtool command line utility.

* Version 0.9.92 (2003-10-25)
- The RFC2818 hostname verification is now case insensitive.
- Added support for generating X.509 certificates.
- Added the certtool, a tool for generating X.509 certificates

* Version 0.9.91 (2003-10-17)
- Fixed a compilation issue in the openpgp authentication part.

* Version 0.9.90 (2003-10-08)
- Updated the openpgp key API (depends on the unreleased new
  opencdk).

* Version 0.9.8 (2003-10-02)
- Updated the SRP implementation to follow the latest draft
  (draft-ietf-tls-srp-05).
- Improved the gnutls-cli behaviour in error handling,
  and added a check for the peer's hostname.
- Use versioned symbols in the library (where available).
- RIJNDAEL ciphersuites were renamed to AES.

* Version 0.9.7 (2003-08-25)
- The tex files are now included in the distribution.
- The library can now decrypt PKCS #12 files encrypted with
  the RC2-40 cipher.
- The missing rfc2818_hostname object is now included.
- Several corrections and bug fixes in the library by 
  Arne Thomassen <arne@arne-thomassen.de>.
- CR is now allowed in the base64 decoder.

* Version 0.9.6 (2003-06-28)
- Added gnutls_x509_privkey_get_key_id() and gnutls_x509_crt_get_key_id()
  functions which return a unique (per public key) ID. These can
  be used to check if the private key corresponds to a given certificate.
- Corrections in the TLS layer openpgp certificate packet parser.
- Corrected a bug in the record layer buffering, which affected
  the case where external pull function was used. Report and patch
  by Sergey Poznyakoff <gray@Mirddin.farlep.net>.
- Corrected a bug in gnutls-srpcrypt where a non allocated variable
  was freed.
- SRP programs are now built by default.
- Added API to read and write to PKCS #12 structures. Prototypes
  in gnutls/pkcs12.h.
- The gnutls_transport_ptr type was changed to a pointer type (void*).

* Version 0.9.5 (2003-04-06)
- Several improvements in the PKCS #7 handling
- Eliminated several hard coded constants in MPI parameters.

* Version 0.9.4 (2003-03-28)
- Corrected a parsing error in the Certificate request message.
- Corrected behaviour when a certificate request message is received.
  Now a certificate packet is always sent, and in SSL 3.0 cipher suites
  a no_certificate alert is sent instead.
- Added functionality to generate PKCS #7 structures (with certificates).

* Version 0.9.3 (2003-03-24)
- Support for MD2 was dropped. 
- Improved the error logging functions, by adding a level, and
  by allowing debugging messages just by increasing the level.
- The diffie Hellman ciphersuites are now of higher priority than
  the plain RSA.
- The RSA premaster secret version check can no longer be disabled.
- Implemented the counter measure discussed in the paper "Attacking
  RSA-based Sessions in SSL/TLS", against the attack described in the
  same paper.
- Added the functions: gnutls_handshake_get_last_in(), 
  gnutls_handshake_get_last_out().
- The gnutls_certificate_set_rsa_params() was renamed to 
  gnutls_certificate_set_rsa_export_params().
- Added the new functions: gnutls_certificate_set_x509_key()
  gnutls_certificate_set_x509_trust(), gnutls_certificate_set_x509_crl(),
  gnutls_x509_crt_export(), gnutls_x509_crl_export().
- Added support for encoding and decoding PKCS #8 2.0 encrypted 
  RSA private keys.

* Version 0.9.2 (2003-03-15)
- Some corrections in the memory mapping code (file is unmapped after 
  it is read).
- Added support for PKCS#10 certificate requests generation.

* Version 0.9.1 (2003-03-12)
- Corrected a bug in 64 bit architectures, which affected the
  serial number calculation in the record layer.
- Added gnutls_certificate_free_keys() which deletes all the
  private keys and certificates from the credentials structure.
- Corrected a broken buffer check in _gnutls_io_read_buffered(),
  which caused some unexpected packet length errors. Report and patch
  by Ian Peters <itp@ximian.com>.
- Added ability to generate RSA keys.
- Increased the maximum parameter size in order to read some large keys
  by some CAs. Patch by Ian Peters <itp@ximian.com>.
- Added an strnstr() function and the requirement in some functions to
  use null terminated PEM structures is no more.
- Use mmap() if available to read files.
- Fixed a memory leak in SRP code reported by Rupert Kittinger 
  <r.kittinger@efkon.com>.

* Version 0.9.0 (2003-03-03)
- This version is not binary compatible with the previous ones.
- The library notifies the application on empty and illegal SRP usernames, 
  so that proper notification (via an alert) is sent to the peer.
- Added ability to send some messages back to the application using
  the gnutls_global_set_log_function().
- gnutls_dh_params_generate() and gnutls_rsa_params_generate() now use 
  gnutls_malloc() to allocate the output parameters.
- Added support for MD2 algorithm in certificate signature verification.
- The RSA and DH parameter generation interface was changed. Added
  ability to import and export from and to PKCS3 structures. This 
  was needed to read parameters generated using the openssl dhparam tool.
- Several changes in the temporary (DH/RSA) parameter codebase. No DH 
  parameters are now included in the library. Also the credentials structure 
  can now hold only one temporary parameter of a kind.
- Added a new Certificate, CRL, Private key and PKCS7 structures handling 
  API, defined in gnutls/x509.h
- Added gnutls_certificate_set_verify_flags() function to allow setting the 
  verification flags in the credentials structure. They will be used in the
  *verify_peers functions.
- Added protection against the new TLS 1.0 record layer timing attack.
- Added support for Certificate revocation lists. Functions defined
  in gnutls/x509.h
- The only functions that were removed are:
  gnutls_x509_certificate_to_xml()
  gnutls_x509_extract_dn_string()
- Ported to libtasn1 0.2.x

* Version 0.8.1 (2003-01-22)
- Improved the SRP support, to prevent attackers guessing the
  available usernames by brute force.
- Improved the SRP detection in gnutls-cli-debug
- Some fixes which now allow compilation.

* Version 0.8.0 (2003-01-20)
- Added gnutls_x509_extract_dn_string() which returns a 
  distinguished name in a single string.
- Added gnutls_openpgp_extract_key_name_string() which returns
  an openpgp user ID in a single string.
- Added gnutls_x509_extract_certificate_ca_status() which returns
  the CA status of the given certificate.
- Added SRP-6 support. Follows draft-ietf-tls-srp-04.
- If libtasn1 is not present in the system, it is included in 
  the main gnutls library.
- If liblzo is present in the system, then the included minilzo
  will not be used, and libgnutls-extra will depend on liblzo.
- GNUTLS_E_PARSING_ERROR error code was replaced by GNUTLS_E_BASE64_DECODING_ERROR, 
  and GNUTLS_E_SRP_PWD_PARSING_ERROR. GNUTLS_E_ASCII_ARMOR_ERROR was also 
  replaced by GNUTLS_E_BASE64_DECODING_ERROR.

* Version 0.6.0 (2002-12-08)
- Added "gnutls/compat4.h" header. This is included in gnutls.h
  to emulate the old 0.4.x API.
- Example programs are now stored in doc/examples/
- Several improvements and updates in the documentation.
- Added the certificate authenticated SRP cipher suites.
- gnutls_x509_extract_certificate_dn_string() was updated to return
  an RFC2253 conforming string.
- Added the SRP related functions:
   gnutls_srp_verifier()
   gnutls_srp_base64_encode()
   gnutls_srp_base64_decode()
- Added the function gnutls_srp_set_server_credentials_function()
  to allow retrieving SRP parameters from an external backend - other
  than password files.
- Added the function gnutls_openpgp_set_recv_key_function()
  which can be used to set a callback, to get OpenPGP keys.
- Exported the functions:
   gnutls_malloc()
   gnutls_free()
  which should be used by callback functions.
- Changed the semantics of gnutls_pem_base64_encode_alloc()
  and gnutls_pem_base64_decode_alloc(). In the default case
  were the gnutls library is used with malloc/realloc/free,
  these are binary compatible.

* Version 0.5.11 (2002-11-05)
- Some fixes in 'gnutls-cli' client program to prevent some segmentation 
  faults at exit.
- Example programs found in the documentation can now be generated by
  running "make examples" in doc/tex directory.
- Added more descriptive error strings, to gnutls_strerror().
- Documented error codes, and the function reference list is now sorted.
- Optimized buffering code.
- gnutls_x509_extract_certificate_dn_string() was rewritten.
- Added GNUTLS_E_SHORT_MEMORY_BUFFER error code, which is returned in the
  case where the memory buffer provided is not long enough.
- Depends on the new OpenCDK 0.3.2.

* Version 0.5.10 (2002-10-13)
- Updated documentation.
- Added server name extension. This allows clients to specify the
  name of the server they connect to. Useful to HTTPS.
- Several corrections in the code base, mostly in signed/unsigned,
  checkings.

* Version 0.5.9 (2002-10-10)
- Corrected some code which worked fine in gcc 3.2, but not with any
  other compiler.
- Updated 'gnutls-cli' with the '--starttls' option, to allow testing
  starttls implementations.
- Added gnutls_x509_extract_key_pk_algorithm() function which extracts
  the private key type, of a DER encoded key.
- Added gnutls_x509_extract_certificate_dn_string() which returns the 
  certificate's distinguished name in a single string.
- Added gnutls_set_default_priority() and gnutls_set_default_export_priority()
  functions, to avoid calling all the *_priority() functions if the defaults
  are acceptable.
- Added int gnutls_x509_check_certificates_hostname() which check whether
  the given hostname matches the owner of the given X.509 certificate.

* Version 0.5.8 (2002-09-25)
- Updated documentation.
- Added gnutls_record_get_direction() which replaces the obsolete
  gnutls_handshake_get_direction().
- Added function to convert error codes to alert descriptions
- Added LZO compression

* Version 0.5.7 (2002-09-11)
- Some fixes in the memory allocation functions (realloc).
- Improved the string functions used in XML certificate generation.
- Removed dependency on libgdbm.
- Corrected bug in gnutls_dh_params_set() which affected
  gnutls_dh_params_deinit().
- Corrected bug in session resuming code in server side.

* Version 0.5.6 (2002-09-06)
- Corrected bugs in SRP implementation, which prevented gnutls 
  to interoperate with other implementations. (interoperability testing
  was done by David Taylor)
- Corrected bug in cert_type extension.
- Corrected extension type checks which used an 8 bit extension size,
  instead of 16 bits.
- Added versioning in the XML output of certificate functions.
- Removed the X.509 test suite.

* Version 0.5.5 (2002-09-03)
- Updated the SRP implementation to the latest draft. The blowfish
  crypt implementation was removed, since the new draft does not allow
  other hash algorithms except for the srpsha. 
- Renamed all the constructed types in order to have more consistent
  names. 
- Improved the certificate and key read functions. Now they can read 
  the certificate and the private key from the same file.
- Updated and corrected documentation.

* Version 0.5.4 (2002-08-27)
- Fixes in TLS 1.0 PRF and SSL3 random functions.
- gnutls_handshake_set_exportable_detection() was obsoleted.
- Added gnutls_openpgp_extract_key_id() which returns the key ID.
- Corrected bug in DHE key exchange
- Added support for temporary RSA keys which are needed for the
  export cipher suites.
- Added the TLS_RSA_EXPORT_ARCFOUR_40_MD5 ciphersuite.

* Version 0.5.3 (2002-08-23)
- No changes. Replaces the tarball of 0.5.2 which accidentally contained
  code from the unstable branch.

* Version 0.5.2 (2002-08-22)
- Added an error code that is returned in clients which connect
  to export only servers. This must be enabled using the
  gnutls_handshake_set_exportable_detection() function.
- Updated openssl compatibility layer.
- Added gnutls_handshake_get_direction() function which returns
  the state of the handshake when interrupted.

* Version 0.5.1 (2002-07-17)
- Corrected the m4 macros which used <gnutls.h> instead of
  <gnutls/gnutls.h>
- Documentation fixes
- Added gnutls_transport_set_ptr2() function, which accepts two
  different pointers, to be used while receiving, and 
  while sending data.
- Semantic changes in gnutls_record_set_max_size(). The requested
  size is now immediately enforced at the output buffers.
- gnutls_global_init_extra() now fails if the library versions do
  not match.
- Fixes in client and server example programs. Null encryption can
  be used in these programs, to assist in debuging.
- Fixes in zlib compression code.

* Version 0.5.0 (2002-07-06)
- Added X.509 certificate tests in tests/ directory
- Removed stubs for SRP and Anonymous authentication. They served
  no purpose since they are always included, unless it was requested
  not to do so.
- Added gnutls_handshake_set_private_extensions() function. This
  function can be used to enable private (gnutls specific) cipher suites
  and compression algorithms.
- Added check for C99 macro support by the compiler.
- Added functions gnutls_b64_encode_fmt2() and gnutls_b64_decode_fmt2()
- Added the new libtasn1 library.
- Removed the gdbm backend. Applications are now responsible for the
  session resuming backend. The gnutls-serv application contains an
  simple example on how to use gdbm for resuming.
- Headers for the gnutls library are now installed in $(includedir)/gnutls
- Added an OpenSSL compatible interface (with some limitations).
- Added functions to convert DER encoded certificates to XML format.

* Version 0.4.4 (2002-06-24)
- Corrected bug in PKCS-1 RSA encryption which prevented gnutls to encrypt
  using keys of some specific size.

* Version 0.4.3 (2002-05-23)
- The gnutls-extra library now compiles fine, if the opencdk library is
  not present.
- Several bug fixes.
- Added gnutls_global_set_mem_func() function, to set the memory allocation
  functions, if other than the defaults are to be used.
- The default memory allocation functions are now the ones in libc.

* Version 0.4.2 (2002-05-21)
- Separated ASN.1 structures parser documentation and TLS library
  documentation.
- Added gnutls_handshake_set_rsa_pms() function, which disables the
  version check in RSA premaster secret.
- Added gnutls_session_is_resumed() function, which reports if a session
  is a resumed one.
- Added gnutls_state_set_ptr() and gnutls_state_get_ptr() functions, to
  assist in callback functions.
- Replaced the included 1024 bit prime for Diffie Hellman, with a new
  random one.
- Relicensed the library under the GNU Lesser General Public License
- Added gnutls-extra library which contains the GPL covered code of gnutls.

* Version 0.4.1 (2002-04-07)
- Now uses alloca() for temporary variables
- Optimized RSA signing
- Added functions to return the peer's certificate activation and
  expiration time.
- Corrected time function's behaviour (the time value returned no longer
  relate to local timezone).

* Version 0.4.0 (2002-04-01)
- Added support for RFC2630 (PKCS7) X.509 certificate sets
- Added new functions: gnutls_x509_extract_certificate_pk_algorithm(),
  gnutls_openpgp_extract_key_pk_algorithm().
- Several optimizations in the Handshake protocol
- Several optimizations in RSA algorithm
- Unified the return values because of small buffers.

* Version 0.3.92 (2002-03-23)
- Updated documentation
- Combined error codes of ASN.1 parser and gnutls
- Removed GNUTLS_CERT_TRUSTED from the CertificateStatus enumeration
- Added protection against CBC chosen plaintext attack (disabled by default)
- Improved and optimized compression support

* Version 0.3.91 (2002-03-03)
- Added gnutls-cli-debug program
- Corrections in session resumption
- Rehandshake can now handle negotiation of different authentication
  type.
- gnutls-cli, gnutls-serv, gnutls-srpcrypt and gnutls-cli-debug are 
  now being installed.

* Version 0.3.90 (2002-02-24)
- Handshake messages are not kept in memory any more. Now we use 
  less memory during a handshake
- Added support for certificates with DSA parameters
- Added DHE_DSS cipher suites
- Key exchange methods changed so they do not depend on the 
  certificate type. Added certificate type negotiation TLS extension.
- Added openpgp key support (EXPERIMENTAL)
- Improved Diffie Hellman key exchange support.
- Bug fixes in the RSA key exchange.
- Added check for the requested TLS extensions
- TLS extensions now use a 16 bit type field.
- Added a minimal string library to assist in ASN.1 parsing
- Changes in ASN.1 parser to work with the new bison
- Added gnutls_x509_extract_subject_alt_name(), which deprecates 
  gnutls_x509_extract_subject_dns_name()
- gnutls_x509_set_trust_(file/mem) can now be called multiple times
- gnutls_srp_server_set_cred_file() can now be called multiple times

* Version 0.3.5 (2002-01-25)
- Corrected the RSA key exchange method, to avoid attacks against
  PKCS-1 formating.

* Version 0.3.4 (2002-01-20)
- Corrected bugs in DHE_RSA key exchange method

* Version 0.3.3 (2002-01-19)
- Added gnutls_x509pki_verify_certificate()
- Added gnutls_x509pki_set_trust_mem() and gnutls_x509pki_set_key_mem()
- Bug fixes in srpcrypt (based on patch by Marc Huber)
- Bug fixes in the Handshake protocol (based on patch by Guillaume Morin)
- Corrected library versioning

* Version 0.3.2 (2002-01-05)
- Corrected bug which did not allow a client to accept multiple CA names
- Added gnutls_fingerprint()
- Added gnutls_x509pki_extract_certificate_serial()
- Added gnutls_b64_encode_fmt() and gnutls_b64_decode_fmt()
- Corrected behaviour in version advertizing
- Updated documentation
- Prefixed all types in gnutls.h with 'GNUTLS_' to avoid namespace collisions

* Version 0.3.1 (2001-12-21)
- Corrections in the configuration files
- Fixes a bug in anonymous authentication

* Version 0.3.0 (2001-12-17)
- Corrected bug in new integer formatting (now we use the old format again)
- Several corrections and usual cleanups

* Version 0.2.91 (2001-12-10)
- Fixes in MPI handling (fixes possible bug with signed integers)
- Removed name indication extension
- Added gnutls_transport_get_ptr() and gnutls_db_get_ptr()
- Optimizations in server certificate callback.
- Fixes in anonymous authentication
- Corrections in client ciphersuite selection

* Version 0.2.90 (2001-12-07)
- gnutls_handshake(), gnutls_read() etc. functions no longer require
  the 'SOCKET cd' argument. This argument is set using the function
  gnutls_set_transport_ptr().
- introduced gnutls_x509pki_get_peer_certificate_list(). This function returns
  a list containing peer's certificate and issuers DER encoded.
- Updated X.509 certificate handling API
- Added callback to select the server certificate
- More consistent function naming (changes in several function names)
- Buffer overflow checking in ASN.1 structures parser
- Updated documentation

* Version 0.2.11 (2001-11-16)
- Changed the meaning of GNUTLS_E_REHANDSHAKE value. If this value
  is returned, then the caller should perform a handshake or send
  an alert to the peer.
- Made receive buffer dynamic. Normally if no large chunks are received
  it occupies less space.
- Added max_record_size extension
- Bugfixes in session handling
- Improved non blocking IO support in the Handshake Protocol
- Usual bugfixes and cleanups
- Documentation updated (includes ASN.1 documentation)

* Version 0.2.10 (2001-11-05)
- Corrected bugs and improved non blocking IO
- Added hooks to use external database to store sessions
- Usual cleanups

* Version 0.2.9 (2001-10-27)
- AUTH_INFO types and structures were moved to library internals
- AUTH_FAILED is no longer returned in SRP authentication
  (any fatal error in SRP means auth failed)
- Introduced GNUTLS_E_INTERRUPTED
- Added support for non blocking IO
- gnutls_recv() and gnutls_send() are now obsolete
- Changed semantics of gnutls_rehandshake()

* Version 0.2.4 (2001-10-12)
- Better handling of X.509 certificate extensions
- Added DHE_RSA ciphersuites
- Updated the Name Indication (dnsname) extension
- Improvements in Diffie Hellman primes handling

* Version 0.2.3 (2001-09-19)
- Memory optimizations in gnutls_recv()
- Fixed several memory leaks
- Added ability to specify callback for x509 client certificate selection
- Better documentation

* Version 0.2.2 (2001-08-21)
- Several bugfixes (library and documentation)

* Version 0.2.1 (2001-08-07)
- SRP fixes

* Version 0.2.0 (2001-08-07)
- Partial support for X.509v3 Certificate extensions.
- Added Internal memory handlers
- Removed gnutls_x509_set_cn()
- Added X.509 client authentication
- Several bug fixes and protocol fixes

* Version 0.1.9 (2001-07-30)
- Corrected bug(s) in ChangeCipherSpec packet (fixes renegotiate)
- SRP is updated to conform to the newest draft.
- Added support for DNSNAME extension.
- Reentracy fixes in ASN.1 Parsing.
- Optimizations in hash/hmac functions
- (Error) message handling has changed
- Better Protocol Version handling
- Added X.509 Certificate Verification
- gnutls_read() semantics are now closer to read(2) - added EOF
- Documented some part of gnutls in doc/tex/ using Latex

* Version 0.1.4 (2001-06-22)
- Corrected (srp) base64 encoding.
- Changed bcrypt algorithm to include username.
- Added RSA Ciphersuites (no certificate checking).
- Fixes in SSL 2.0 client hello parsing.
- Added ASN.1 and DER parsers.
- Bugfixes in session resuming
- Updated Ciphersuite selection algorithm
- Added internal representation of X.509 structures.
- Added global state

* Version 0.1.3 (2001-06-01)
- Updated API (and the way it is documented - we use inline documentation)
- Added function to access alert messages.
- Added support for renegotiating parameters.
- Better and Faster Resume Database handling.
- Several bugfixes

* Version 0.1.2 (2001-05-14)
- Updated API
- Fixes in extension handling

* Version 0.1.1 (2001-05-13)
- Added compatibility with Stanford's libsrp library

* Version 0.1.0 (2001-05-09)
- Added SSL 2.0 client hello support
- GNUTLS is a gnu library
- Added support for TLS extensions.
- Added support for SRP

* Version 0.0.7 (2001-01-11)
- Added server side session resuming (using gdbm)
- Added twofish algorithm

* Version 0.0.6 (2000-12-20)
- Added client side session resuming
- Better documentation (check doc/API)
- Better socket handling (gnutls can be used with select())
- Some primitive support for non blocking IO and socket options has been added.

* Version 0.0.5 (2000-12-07)
- Added Compression (using ZLIB)
- Added SSL 3.0 support

----------------------------------------------------------------------
Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
