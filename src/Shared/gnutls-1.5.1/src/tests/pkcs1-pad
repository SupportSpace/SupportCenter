#!/bin/sh

# Copyright (C) 2004, 2005, 2006 Free Software Foundation
#
# Author: Simon Josefsson
#
# This file is part of GNUTLS.
#
# GNUTLS is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# GNUTLS is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNUTLS; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

srcdir=${srcdir:-.}
CERTTOOL=${CERTTOOL:-../src/certtool}

# Test 1, PKCS#1 pad digestAlgorithm.parameters

EXPECT1=2101

$CERTTOOL --verify-chain --infile $srcdir/pkcs1-pad-ok.pem | tee out1
$CERTTOOL --verify-chain --infile $srcdir/pkcs1-pad-broken.pem | tee out2

out1oks=`grep 'Verified.' out1 | wc -l`
out2oks=`grep 'Verified.' out2 | wc -l`
out1fails=`grep 'Not verified.' out1 | wc -l`
out2fails=`grep 'Not verified.' out2 | wc -l`

rm -f out1 out2

echo out1 oks $out1oks fails $out1fails out2 oks $out2oks fails $out2fails

if test "$out1oks$out2oks$out1fails$out2fails" != "$EXPECT1"; then
    echo expected $EXPECT1
    echo "PKCS1-PAD1 FAIL"
    exit 1
fi

echo "PKCS1-PAD1 OK"

# Test 2, Bleichenbacher's Crypto 06 rump session

EXPECT2=1001

$CERTTOOL --verify-chain --infile $srcdir/pkcs1-pad-ok2.pem | tee out1
$CERTTOOL --verify-chain --infile $srcdir/pkcs1-pad-broken2.pem | tee out2

out1oks=`grep 'Verified.' out1 | wc -l`
out2oks=`grep 'Verified.' out2 | wc -l`
out1fails=`grep 'Not verified.' out1 | wc -l`
out2fails=`grep 'Not verified.' out2 | wc -l`

rm -f out1 out2

echo out1 oks $out1oks fails $out1fails out2 oks $out2oks fails $out2fails

if test "$out1oks$out2oks$out1fails$out2fails" != "$EXPECT2"; then
    echo expected $EXPECT2
    echo "PKCS1-PAD2 FAIL"
    exit 1
fi

echo "PKCS1-PAD2 OK"

# Test 3, forged Starfield certificate,
# by Andrei Pyshkin, Erik Tews and Ralf-Philipp Weinmann.

EXPECT3=11

$CERTTOOL --verify-chain --infile $srcdir/pkcs1-pad-broken3.pem | tee out1

out1oks=`grep 'Verified.' out1 | wc -l`
out1fails=`grep 'Not verified.' out1 | wc -l`

rm -f out1

echo out1 oks $out1oks fails $out1fails

if test "$out1oks$out1fails" != "$EXPECT3"; then
    echo expected $EXPECT3
    echo "PKCS1-PAD3 FAIL"
    exit 1
fi

echo "PKCS1-PAD3 OK"

# We're done.
exit 0
