#{

#include <common.h>

void print_serv_license(void);
void serv_version(void);

#}

helpnode "GNU TLS test server\nUsage: gnutls-serv [options]\n\n"

#int debug;
option (d, debug) INT "integer" { $debug = $1 } "Enable debugging" 

#int generate;
option (g, generate) { $generate = 1 } "Generate Diffie Hellman Parameters."

#int port;
option (p, port) INT "integer" { $port = $1 } "The port to connect to."

#int quiet;
option (q, quiet) { $quiet = 1 } "Suppress some messages."

#int nodb;
option (nodb) { $nodb = 1 } "Does not use the resume database."

#int http;
option (http) { $http = 1 } "Act as an HTTP Server."
option (echo) { $http = 0 } "Act as an Echo Server."

#char *dh_params_file;
option (dhparams) STR "FILE" { $dh_params_file = $1 } "DH params file to use."

#int fmtder;
option (x509fmtder) { $fmtder = 1 } "Use DER format for certificates"

#char *x509_cafile;
option (x509cafile) STR "FILE" { $x509_cafile = $1 } "Certificate file to use."

#char *x509_crlfile;
option (x509crlfile) STR "FILE" { $x509_crlfile = $1 } "CRL file to use."

#char *pgp_keyring;
option (pgpkeyring) STR "FILE" { $pgp_keyring = $1 } "PGP Key ring file to use."

#char *pgp_trustdb;
option (pgptrustdb) STR "FILE" { $pgp_trustdb = $1 } "PGP trustdb file to use."

#char *pgp_keyfile;
option (pgpkeyfile) STR "FILE" { $pgp_keyfile = $1 } "PGP Key file to use."

#char *pgp_certfile;
option (pgpcertfile) STR "FILE" { $pgp_certfile = $1 } "PGP Public Key (certificate) file to use."

#char *x509_keyfile;
option (x509keyfile) STR "FILE" { $x509_keyfile = $1 } "X.509 key file to use."

#char *x509_certfile;
option (x509certfile) STR "FILE" { $x509_certfile = $1 } "X.509 Certificate file to use."

#char *x509_dsakeyfile;
option (x509dsakeyfile) STR "FILE" { $x509_dsakeyfile = $1 } "Alternative X.509 key file to use."

#char *x509_dsacertfile;
option (x509dsacertfile) STR "FILE" { $x509_dsacertfile = $1 } "Alternative X.509 certificate file to use."

#int require_cert;
option (require-cert) { $require_cert = 1 } "Require a valid certificate."

#char *psk_passwd;
option (pskpasswd) STR "FILE" { $psk_passwd = $1 } "PSK password file to use."

#char *srp_passwd;
option (srppasswd) STR "FILE" { $srp_passwd = $1 } "SRP password file to use."

#char *srp_passwd_conf;
option (srppasswdconf) STR "FILE" { $srp_passwd_conf = $1 } "SRP password conf file to use."


#int nciphers;
#char **ciphers;
option (ciphers) *STR "cipher1 cipher2..." { $ciphers = $1; $nciphers = @1 } "Ciphers to enable."

#int nproto;
#char **proto;
option (protocols) *STR "protocol1 protocol2..." { $proto = $1; $nproto = @1 } "Protocols to enable."

#int ncomp;
#char **comp;
option (comp) *STR "comp1 comp2..." { $comp = $1; $ncomp = @1 } "Compression methods to enable."

#int nmacs;
#char **macs;
option (macs) *STR "mac1 mac2..." { $macs = $1; $nmacs = @1 } "MACs to enable."

#int nkx;
#char **kx;
option (kx) *STR "kx1 kx2..." { $kx = $1; $nkx = @1 } "Key exchange methods to enable."

#int nctype;
#char **ctype;
option (ctypes) *STR "certType1 certType2..." { $ctype = $1; $nctype = @1 } "Certificate types to enable."


option (l, list) { print_list(); exit(0); } "Print a list of the supported algorithms  and modes."
option (h, help) { gaa_help(); exit(0); } "prints this help"

option (v, version) { serv_version(); exit(0); } "prints the program's version number"
option ( copyright) { print_serv_license(); exit(0); } "prints the program's license"


init { $generate=0; $port=5556; $http=0; $ciphers=NULL;
	$kx=NULL; $comp=NULL; $macs=NULL; $ctype=NULL; $nciphers=0;
	$nkx=0; $ncomp=0; $nmacs=0; $nctype = 0; $nodb = 0;
	$x509_cafile = NULL; $pgp_keyfile=NULL; $pgp_certfile=NULL;
	$x509_keyfile=NULL; $x509_certfile=NULL; $x509_crlfile = NULL;
	$x509_dsakeyfile=NULL; $x509_dsacertfile=NULL; 
	$srp_passwd=NULL; $srp_passwd_conf=NULL; $quiet = 0;
	$pgp_trustdb=NULL; $pgp_keyring=NULL; $fmtder = 0; 
	$dh_params_file=NULL; $debug=0; $require_cert = 0; $psk_passwd = 0; }


